node {
     stage('Clone repository') {
         checkout scm
     }

     def imageName = "hyunilshin/jenkins-training-nginx:${BRANCH_NAME}-${BUILD_NUMBER}"
     def app
     dir('pipeline_examples/07_docker') {
         stage('Build image') {
             app = docker.build(imageName, '-f ./Dockerfile_nginx .')
         }
     }

      //   app.inside {
      //      sh script: 'ps -ef | grep nginx', returnStatus: true
            // CMD가 cat로 변경되어 컨테이너에서 nginx가 실행되지는 않는다.
      //   }

      stage('test') {
         docker.image(imageName).withRun("-p 8087:80") { c ->
            // container가 아닌 host에서 실행함
            sh script: "curl -i http://localhost:8087/", returnStatus: true
         }
      }

      stage('Push image') {
         docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-hyunilshin') {
             app.push()
             app.push("latest")

               // https://hub.docker.com/r/hyunilshin/jenkins-training-nginx
         }
      }
}

